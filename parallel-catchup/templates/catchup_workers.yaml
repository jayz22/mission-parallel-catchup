apiVersion: v1
kind: Service
metadata:
  name: stellar-core
spec:
  clusterIP: None
  selector:
    app: stellar-core
  ports:
    - port: 11626
      targetPort: 11626
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stellar-core
  labels:
    app: stellar-core
spec:
  serviceName: "stellar-core"
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: stellar-core
  template:
    metadata:
      labels:
        app: stellar-core
    spec:
      containers:
      - name: stellar-core
        image: jayz22/core-worker
        # resource specs copied from supercluster 
        resources:
          requests:
            cpu: "250m"
            memory: "1200Mi"
            ephemeral-storage: "35Gi"
          limits:
            cpu: "2000m"
            memory: "6000Mi"
            ephemeral-storage: "40Gi"
        command: ["sh", "/scripts/worker.sh"]
        ports:
        - containerPort: 11626
        env:
        - name: REDIS_HOST
          value: "{{ .Values.redis.host }}"
        - name: REDIS_PORT
          value: "{{ .Values.redis.port }}"
        - name: JOB_QUEUE
          value: "{{ .Values.redis.job_queue }}"
        - name: SUCCESS_QUEUE
          value: "{{ .Values.redis.success_queue }}"
        - name: FAILED_QUEUE
          value: "{{ .Values.redis.failed_queue }}"
        - name: PROGRESS_QUEUE
          value: "{{ .Values.redis.progress_queue }}"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: script
          mountPath: /scripts
      volumes:
      - name: config
        configMap:
          name: stellar-core-config
      - name: script
        configMap:
          name: worker-script          
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: worker-script
data:
  worker.sh: |-
    {{- (.Files.Get "files/worker.sh") | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stellar-core-config
data:
  stellar-core.cfg: |-
    {{- (.Files.Get "files/stellar-core.cfg") | nindent 4 }}
